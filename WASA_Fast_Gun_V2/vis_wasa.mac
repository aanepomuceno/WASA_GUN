# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume 
#
# Set specific colour for identification : ghost parallel geometry envelope ("ghost") as yellow
#/vis/geometry/set/colour GhostLogical ! yellow

# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0

# Specify zoom value:
/vis/viewer/zoom 1.1
#
# Specify style (surface or wireframe):
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100

#Text
/vis/set/textColour red
/vis/set/textLayout right
/vis/scene/add/text2D 0.9 -0.9 20 ! ! WASA FastSim

#Make detectors visible
# Make the "World" box invisible
/vis/geometry/set/visibility World 0 false
/vis/geometry/set/colour SECLV 0 0 1 0 .5
#/vis/geometry/set/colour AbsoLV 0 0 1 0 .5
#/vis/geometry/set/colour ScintLV 0 1 0 0 .7
#/vis/geometry/set/colour HollowLV 0 1 1 1 0.6
#/vis/geometry/set/colour  CarbonLV 0 0 0 1 1
/vis/viewer/set/style surface
/vis/viewer/set/hiddenMarker true
#/vis/viewer/set/viewpointThetaPhi 120 150
/vis/viewer/set/viewpointThetaPhi 0 0

# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 1 m
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
#/vis/scene/add/trajectories smooth
#/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/set e- blue
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
